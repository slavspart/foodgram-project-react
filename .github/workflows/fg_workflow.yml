name: fg_workflow

on: [push]

jobs:
  # flake8_and_pytest:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python 
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.7

    # - name: Install dependencies
    #   run: | 
    #     python -m pip install --upgrade pip 
    #     pip install flake8
    #     pip install -r api_yamdb/requirements.txt 

    # - name: Test with flake8 and pytest
    #   run: |
    #     python -m flake8
    #     pytest
  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      # needs: flake8_and_pytest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DH_USERNAME }} 
            password: ${{ secrets.DH_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            context: ./backend/foodgram
            push: true
            tags: slavspart/foodgram_backend:latest 
  # deploy:
  #     runs-on: ubuntu-latest
  #     needs: build_and_push_to_docker_hub
  #     if: github.ref == 'refs/heads/master'
  #     # Деплоим только если пуш в мастер
  #     steps:
  #       - name: executing remote ssh commands to deploy
  #         uses: appleboy/ssh-action@master
  #         with:
  #           host: ${{ secrets.HOST }}
  #           username: ${{ secrets.USER }}
  #           key: ${{ secrets.SSH_KEY }}
  #           passphrase: ${{ secrets.PASSPHRASE }}
  #           script: |
  #             cd infra
  #             sudo docker-compose stop
  #             sudo docker-compose rm web
  #             sudo rm .env
  #             sudo touch .env
  #             sudo echo HOSTS=${{ secrets.HOSTS }} | sudo tee .env
  #             sudo echo DB_ENGINE=${{ secrets.DB_ENGINE }} | sudo tee -a .env
  #             sudo echo DB_NAME=${{ secrets.DB_NAME }} | sudo tee -a .env
  #             sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} | sudo tee -a .env
  #             sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} | sudo tee -a .env
  #             sudo echo DB_HOST=${{ secrets.DB_HOST }} | sudo tee  -a .env
  #             sudo echo DB_PORT=${{ secrets.DB_PORT }} | sudo tee -a .env
  #             sudo docker-compose pull && sudo docker-compose up -d
  #             sudo docker-compose exec web python manage.py migrate
  #             sudo docker-compose exec web python manage.py collectstatic --no-input
  # send_message:
  #     runs-on: ubuntu-latest
  #     needs: deploy
  #     steps:
  #     - name: send message
  #       uses: appleboy/telegram-action@master
  #       with:
  #         to: ${{ secrets.TELEGRAM_TO }}
  #         token: ${{ secrets.TELEGRAM_TOKEN }}
  #         message: ${{ github.workflow }} успешно выполнен! 